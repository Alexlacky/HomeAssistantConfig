#################################################
# System notifications
#################################################

- alias: "HASS: Login Failed [notify to group system]"
  id: 142e502b-3e63-49e3-b790-9150f155dc6d
  trigger:
    - platform: state
      entity_id: persistent_notification.http_login
  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state != off }}"
  action:
    - service: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        disable_web_page_preview: true
        message: |
          *Внимание!*
          Неудачная попытка входа, ошибка авторизации!
          Источник: {{ state_attr('persistent_notification.http_login','message') | regex_findall_index('from (.*)\. ') }}
          _http://whatismyipaddress.com/ip/{{ state_attr('persistent_notification.http_login','message') | regex_findall_index('\((.*)\)') }}_
    - service: persistent_notification.dismiss
      data:
        notification_id: http_login

- alias: "HASS: IP Banned [notify to group system]"
  id: ba2318c5-5c2e-4575-aa13-02f53063793d
  trigger:
    - platform: state
      entity_id: persistent_notification.ip_ban
  action:
    - service: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        disable_web_page_preview: true
        message: |
          *Внимание!*
          Заблокирован IP: {{ state_attr('persistent_notification.ip_ban', 'message').split('Too many login attempts from ')[1] }}
          _http://whatismyipaddress.com/ip/{{ state_attr('persistent_notification.ip_ban', 'message').split('Too many login attempts from ')[1] }}_
    - service: persistent_notification.dismiss
      data:
        notification_id: ip_ban

- alias: "HASS: Home Assistant Start"
  id: 60f94d65-93d1-49e5-94d7-ca58471d02c4
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: homeassistant.update_entity
      target:
        entity_id: sensor.errors_in_system_log_command_line
    - wait_for_trigger:
      - platform: state
        entity_id: sensor.errors_in_system_log_command_line
      timeout: "00:00:01"
    - service: homeassistant.update_entity
      target:
        entity_id: sensor.warnings_in_system_log_command_line
    - wait_for_trigger:
      - platform: state
        entity_id: sensor.warnings_in_system_log_command_line
      timeout: "00:00:01"
    - service: notify.telegram_group_system
      data:
        message: |
          _INFO:_ Home Assistant *запущен* за {{ states('sensor.start_time') }} сек.
          Ошибок: *{{ states('sensor.errors_in_system_log_command_line') }}*, Предупреждений: *{{ states('sensor.warnings_in_system_log_command_line') }}*
    - service: script.turn_on
      target:
        entity_id: script.hass_errors_counter_set_at_startup
    - service: script.turn_on
      target:
        entity_id: script.hass_warnings_counter_set_at_startup
    - service: script.turn_on
      target:
        entity_id: script.auto_reboot_by_errors_after_boot

- alias: "HASS: Home Assistant Shutdown"
  id: 44bdbc77-2894-4c80-9739-6c690bde13f9
  initial_state: true
  trigger:
    platform: homeassistant
    event: shutdown
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.ha_shutdown
    - service: notify.telegram_group_system
      data:
        message: "_INFO:_ Home Assistant *остановлен*."

- alias: "HASS: ERRORs in System Log [notify to group system]"
  id: e4140626-d5b1-4a6c-abe1-f99ae0547f0b
  initial_state: false
  trigger:
    platform: event
    event_type: system_log_event
    event_data:
      level: ERROR
  action:
    - service: notify.telegram_group_system
      data_template:
        message: "_{{ trigger.event.data.level }}:_ {{ trigger.event.data.message }}"

- alias: "HASS: WARNINGs in System Log [notify to group system]"
  id: 42541570-874a-46a9-86d0-0db433aaec5b
  initial_state: false
  trigger:
    platform: event
    event_type: system_log_event
    event_data:
      level: WARNING
  action:
    - service: notify.telegram_group_system
      data_template:
        message: "_{{ trigger.event.data.level }}:_ {{ trigger.event.data.message }}"

- alias: "HASS: System Config Errors [notify to group system]"
  id: 3770bcbf-435a-43b2-bfde-b04711e32b61
  trigger:
    - platform: event
      event_type: call_service
      event_data:
        domain: persistent_notification
        service: create
  condition:
    - condition: or
      conditions:
        - condition: template
          value_template: >-
            {{ trigger.event.data.service_data.notification_id == 'homeassistant.check_config' }}
        - condition: template
          value_template: >-
            {{ trigger.event.data.service_data.notification_id == 'invalid_config' }}
  action:
    - service: notify.telegram_group_system
      data_template:
        message: |
          *Внимание, конфигурация содержит ошибки!*
          {% if trigger.event.data.service_data.notification_id == 'homeassistant.check_config' -%}
          Перезапуск HA отменён, подробности в логах.
          {% elif trigger.event.data.service_data.notification_id == 'invalid_config' -%}
          {{ trigger.event.data.service_data.message }}
          {% endif %}
    - service: persistent_notification.dismiss
      data:
        notification_id: >-
          {{ trigger.event.data.service_data.notification_id }}

- alias: "HASS: ERRORs in Automations [notify to group system]"
  id: 67d49afb-cac6-45e2-99b0-0ad5904d84b2
  mode: queued
  trigger:
    - platform: event
      event_type: system_log_event
      event_data:
        level: ERROR
  condition:
    - condition: template
      value_template: >-
        {{ 
          trigger.event.data.message | regex_search('Error while executing automation') or
          trigger.event.data.message | regex_search('Error executing script')
        }}
#    - condition: template
#      value_template: "{{ not 'automation.system_automation_error' in trigger.event.data.message }}"
  action:
    - service: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        parse_mode: html
        message: |
          <i>INFO:</i> Ошибка выполнения автоматизации: 
          {{ trigger.event.data.message }}.

- alias: "HASS: Critical Error [notify to group system]"
  id: d70721b8-e0f2-415a-b917-331781a463ee
  mode: queued
  trigger:
    - platform: event
      event_type: system_log_event
      event_data:
        level: FATAL
    - platform: event
      event_type: system_log_event
      event_data:
        level: CRITICAL
  action:
    - service: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        parse_mode: html
        message: |
          Критическая ошибка системы:
          {{ trigger.event.data.message }}!

- alias: "HASSIO: New Version Available [notify to group system]"
  id: 4f0d8495-8abd-4513-9348-7630c5576088
  initial_state: true
  trigger:
    platform: template
    value_template: "{{ states('sensor.current_version') < states('sensor.latest_version') }}"
  action:
    service: notify.telegram_group_system
    data_template:
      message: "_INFO:_ Доступна новая версия Home Assistant ({{ states('sensor.latest_version') }})"

- alias: "HASSIO: New Home Assistant OS Version Available [notify to group system]"
  id: e1febbae-54ca-44b3-b808-83f74f29bf36
  initial_state: true
  trigger:
    platform: template
    value_template: "{{ states('sensor.home_assistant_operating_system_version') < states('sensor.home_assistant_operating_system_newest_version') }}"
  action:
    service: notify.telegram_group_system
    data_template:
      message: "_INFO:_ Доступна новая версия Home Assistant OS ({{ states('sensor.home_assistant_operating_system_newest_version') }})"

- alias: "HASSIO: New Addons Update Available [notify to group system]"
  id: 19295cc3-b128-4b64-925a-ffde2688cf9c
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.updater_addons
      from: "off"
      to: "on"
  condition:
    - condition: template
      value_template: "{{ states('sensor.supervisor_updates') | int > 0 }}"
  action:
    - service: notify.telegram_group_system
      data_template:
        message: |
          _INFO:_ Доступны новые версии Add-ons (Supervisor) ({{ states('sensor.supervisor_updates') }}):
          {%- for repo in state_attr('sensor.supervisor_updates', 'addons') %}
          {{ repo.name }} (_{{ repo.version }}_ -> _{{ repo.version_latest }}_){% if not loop.last %}, {% endif %}
          {%- endfor -%}

- alias: "HASSIO: New Supervisor Version Available [notify to group system]"
  id: 80b629d2-3441-467b-ad60-dd49de9f8703
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.updater_supervisor
      from: "off"
      to: "on"
  action:
    - service: notify.telegram_group_system
      data_template:
        message: "_INFO:_ Доступна новая версия Supervisor ({{ state_attr('sensor.supervisor_updates', 'newest_version') }})"

- alias: "HACS: New Component Version Available [notify to group system]"
  id: 4bc5609a-1e8b-4e66-944a-e613bcaad6d2
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.hacs
  condition:
    - condition: template
      value_template: "{{ (states('sensor.hacs') | int) > 0 }}"
  action:
    service: notify.telegram_group_system
    data_template:
      message: |
        _INFO:_ Доступны новые версии Custom Components (HACS) ({{ states('sensor.hacs') }}):
        {%- for repo in state_attr('sensor.hacs', 'repositories') %}
        {{ repo.display_name }} (_{{ repo.installed_version }}_ -> _{{ repo.available_version }}_){% if not loop.last %}, {% endif %}
        {%- endfor -%}

- alias: "Device Needs Attention [notify to group system]"
  id: 89bb378c-13b5-4051-bd08-3f226dbc8834
  mode: queued
  max: 30
  trigger:
    - platform: event
      event_type: state_changed
  condition:
    - condition: template
      value_template: >-
        {{ states('input_boolean.ha_shutdown') == 'off' }}
    - condition: template
      value_template: >-
        {{ not trigger.event.data.entity_id | regex_search
          (
          '^group.battery_devices$|'
          '^binary_sensor.lamp_status_|'
          '^sensor.lamp_status_|'
          '^sensor.mirobot_1s_|'
          '^switch.smartir_|'
          '.*\.smartmi_humidifier_\d{2}_\w+_|'
          '^weather.nivki_2|'
          '^sensor\.nivki_2_|'
          '^weather.moskva_danilovskii|'
          '^sensor\.moskva_danilovskii_|'
          '^sensor\.tplink_smartplug_01_|'
          '^sensor\.gosund_sp111_\d{2}_|'
          '^switch\.gosund_sp111_\d{2}_restart|'
          '^sensor\..*_ble'
          )
        }}
    - condition: template
      value_template: >-
        {{ trigger.event.data.new_state.state != trigger.event.data.old_state.state }}
    - condition: template
      value_template: >-
        {{ trigger.event.data.new_state.state in ['unknown', 'unavailable'] }}
  action:
    - condition: template
      value_template: "{{ states('input_boolean.ha_shutdown') == 'off' }}"
    - service: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        parse_mode: html
        disable_notification: true
        message: |
          <i>INFO</i>: Объект {{ trigger.event.data.entity_id }} сменил статус на {{ trigger.event.data.new_state.state }}.

- alias: Fix for reload automations
  id: 4c7a9752-b7d2-4c41-acf6-7d175f6b9d39
  trigger:
    - platform: event
      event_type: call_service
      event_data:
        domain: automation
        service: reload
    - platform: event
      event_type: automation_reloaded
  action:
    - service: >-
        {% if trigger.event.event_type == 'call_service' -%}
            automation.turn_off
        {% else -%}
            automation.turn_on
        {% endif -%}
      entity_id: automation.device_needs_attention_notify_to_group_system

- alias: "Low Battery Alert [notify to group system]"
  id: 6d87e0a2-8a6b-4b20-bd28-900af1620584
  trigger:
    - platform: event
      event_type: state_changed
  condition:
    - condition: template
      value_template: >-
        {{ trigger.event.data.entity_id in (expand('group.battery_devices') | map(attribute='entity_id')) }}
    - condition: template
      value_template: >-
        {{ not trigger.event.data.new_state.state in ['unknown', 'unavailable'] }}
    - condition: template
      value_template: >-
        {{ (trigger.event.data.new_state.state | int) < (states('input_number.low_battery_alert_threshold') | int) }}
  action:
    - service: notify.telegram_group_system
      data_template:
        message: |
          *Внимание, низкий заряд батареи!*
          {{ trigger.event.data.new_state.attributes.friendly_name }}: {{ trigger.event.data.new_state.state }} %!

- alias: New Network Device Notification
  id: 7e5b4f9a-eb87-487f-8e1a-4b980de13734
  initial_state: true
  mode: parallel
  trigger:
    platform: event
    event_type: device_tracker_new_device
  action:
    service: notify.telegram_group_system
    data_template:
      title: "*Найдено новое устройство в сети!*"
      message: |
        MAC: {{ trigger.event.data.mac }}

- alias: "Auto Backup Completed [notify to group system]"
  id: fef0c4de-e2ba-419b-b49e-ff39449e6481
  trigger:
    platform: event
    event_type: auto_backup.backup_successful
  action:
    - service: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        parse_mode: html
        message: |
          <i>INFO:</i> Создание резервной копии завершилось успешно.
          Имя: {{ trigger.event.data.name }}

- alias: "Auto Backup Failure [notify to group system]"
  id: 24f2bb2c-3e2c-47b5-ba9a-a92f0f5bf63a
  trigger:
    platform: event
    event_type: auto_backup.backup_failed
  action:
    - service: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        parse_mode: html
        title: "<b>Внимание!</b>"
        message: |
          Создание резервной копии завершилось ошибкой.
          Имя: {{ trigger.event.data.name }}
          Ошибка: {{ trigger.event.data.error }}

- alias: "ConBee2: USB Device Errors in Log"
  id: 5cc751d0-a514-480f-9bdc-6c2bd17a7f0d
  mode: queued
  trigger:
    - platform: event
      event_type: system_log_event
  condition:
    - condition: template
      value_template: >-
        {{ 
          trigger.event.data.message | regex_search('usb-dresden_elektronik_ingenieurtechnik_GmbH_ConBee_II_DE2413834-if00')
        }}
  action:
    - service: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        parse_mode: html
        title: "<b>Внимание!</b>"
        message: |
          <i>INFO:</i> Ошибка USB устройства ConBee2: 
          {{ trigger.event.data.message }}
        inline_keyboard:
          - 'Перезапустить HA:/cb2_ha_restart, Перезагрузить VM:/cb2_vm_reboot'

- alias: 'ConBee2 - Restart HA'
  id: 7ab7e3b6-5674-4ece-a28b-80a96d0239eb
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/cb2_ha_restart'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Команда отправлена'
    - service: telegram_bot.edit_replymarkup
      data:
        message_id: '{{ trigger.event.data.message.message_id }}'
        chat_id: '{{ trigger.event.data.chat_id }}'
        inline_keyboard: []
    - service: homeassistant.restart

- alias: 'ConBee2 - Reboot VM'
  id: 402ef2b9-e133-4eff-ba96-39a69f046be5
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: '/cb2_vm_reboot'
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: '{{ trigger.event.data.id }}'
        message: 'Команда отправлена'
    - service: telegram_bot.edit_replymarkup
      data:
        message_id: '{{ trigger.event.data.message.message_id }}'
        chat_id: '{{ trigger.event.data.chat_id }}'
        inline_keyboard: []
    - service: hassio.host_reboot